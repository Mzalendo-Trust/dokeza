version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  # production_traefik: {}

services:
  django: &django
    build:
      # LEAVE AS IS. A BUG IS INTRODUCED IF YOU CHANGE THE CONTEXT AND DOCKERFILE REFERENCE.
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: dokeza_2_0_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: dokeza_2_0_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  nginx:
    build: ./compose/production/nginx
    # depends_on:
      # - django
    # environment:
    #   - MY_DOMAIN_NAME=dokeza.mzalendo.com
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./certbot/certs:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot

  certbot:
    image: certbot/certbot:latest
    command: certonly --webroot -w /var/www/certbot -d dokeza.mzalendo.com -m admin@ra.co.ke -n --agree-tos --force-renewal
    depends_on:
      - nginx
    volumes:
      - ./certbot/certs:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot
      - ./certbot/logs:/var/log/letsencrypt

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: dokeza_2_0_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: dokeza_2_0_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: dokeza_2_0_production_flower
    command: /start-flower

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups
