version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  django: &django
    build:
      # LEAVE AS IS. A BUG IS INTRODUCED IF YOU CHANGE THE CONTEXT AND DOCKERFILE REFERENCE.
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: dokeza_2_0_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: dokeza_2_0_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  nginx:
    build: ./compose/production/nginx
    depends_on:
      - django
      - certbot
    environment:
      - MY_DOMAIN_NAME=dokeza.mzalendo.com
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt

  certbot:
    image: quay.io/letsencrypt/letsencrypt
    command: bash -c "sleep 6 && certbot certonly -n --standalone -d dokeza.mzalendo.com --text --agree-tos --email jimmy@theredafro.com --server https://acme-v02.api.letsencrypt.org/directory --rsa-key-size 4096 --verbose --keep-until-expiring --standalone-supported-challenges http-01 --dry-run"
    entrypoint: ""
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    ports:
      - "80"
      - "443"
    environment:
      - TERM=xterm

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: dokeza_2_0_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: dokeza_2_0_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: dokeza_2_0_production_flower
    command: /start-flower

  
  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups
