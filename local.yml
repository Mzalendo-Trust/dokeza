version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  # onlyoffice_postgresql_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: dokeza_2_0_local_django
    container_name: django
    depends_on:
      - postgres
      - mailhog     
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: dokeza_2_0_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
  
  # onlyoffice-documentserver:
  #   build:
  #     context: ./compose/local/onlyoffice/Dockerfile
  #   container_name: onlyoffice-documentserver
  #   depends_on:
  #     - onlyoffice-postgresql
  #     - onlyoffice-rabbitmq
  #   env_file:
  #     - ./envs/.local/.documentserver
  #   ports:
  #     - '8082:8082'
  #     # - '443:443'
  #   stdin_open: true
  #   restart: always
  #   volumes:
  #      - /var/www/onlyoffice/Data
  #      - /var/log/onlyoffice
  #      - /var/lib/onlyoffice/documentserver/App_Data/cache/files
  #      - /var/www/onlyoffice/documentserver-example/public/files
  #      - /usr/share/fonts
       
  # onlyoffice-rabbitmq:
  #   container_name: onlyoffice-rabbitmq
  #   image: rabbitmq
  #   restart: always
  #   expose:
  #     - '5672'

  # onlyoffice-postgresql:
  #   container_name: onlyoffice-postgresql
  #   image: postgres:12.3
  #   environment:
  #     - POSTGRES_DB=onlyoffice
  #     - POSTGRES_USER=onlyoffice
  #     - POSTGRES_HOST_AUTH_METHOD=trust
  #   restart: always
  #   expose:
  #     - '5432'
  #   volumes:
  #     - onlyoffice_postgresql_data:/var/lib/postgresql

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0
    container_name: redis

  celeryworker:
    <<: *django
    image: dokeza_2_0_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: dokeza_2_0_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: dokeza_2_0_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower

  # nginx-proxy:
  #   image: jwilder/nginx-proxy:alpine
  #   container_name: nginx-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./certs:/etc/nginx/certs
  #   restart: always
  #   depends_on:
  #     - django
